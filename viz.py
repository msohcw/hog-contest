import matplotlib.pyplot as plt
import numpy as np
"""
This is a minimal contest submission file. You may also submit the full
hog.py from Project 1 as your contest entry.

Only this file will be submitted. Make sure to include any helper functions
from `hog.py` that you'll need here! For example, if you have a function to
calculate Free Bacon points, you should make sure it's added to this file
as well.
"""

"""
Ported hog.py to C++ for speedup. Code is below. Ran a reinforcement learning algorithm (basically Q-learning) against several strategies, then trained the algorithm against itself. Final lookup table is the best action derived for each state.
"""

TEAM_NAME = 'Team Avatar' # Change this line!

lookup =[[ 5,  2,  7,  4,  4,  6,  0,  5,  0,  2,  3,  3,  7,  3,  0,  3,  2,  3,  0,  0,  3,  5,  6,  6,  1,  6,  9,  9,  8,  0,  5,  6, -1,  6,  7, -1,  7, 10,  9,  5, 10,  2,  9,  6, 10,  8,  9,  8,  0, 10,  8,  9,  8,  7,  2, -1,  5,  7, 10,  1,  5, -1,  0,  8,  4,  3,  1,  0,  4,  5,  2, -1, 10,  8,  1,  0, -1, -1,  1,  8,  7,  9,  7,  0,  7, -1,  9, 10, -1,  4,  3,  4,  2,  2,  9,  9,  9,  7,  3,  7,  9],
[ 4,  3,  4,  5,  3,  4,  6,  5,  0,  0,  3,  5,  0,  5,  4, -1,  3,  4,  2,  0,  5,  3,  2,  4,  2,  7,  3,  5,  3,  0,  3,  2, 10,  3,  9,  5,  8, -1,  7,  5,  6,  6,  5, -1,  7,  0, -1,  4,  8,  1,  5, 10, -1,  5,  7,  6,  7, -1,  1,  1,  6,  1,  0,  0,  5,  5,  1,  5,  5,  4,  5,  3,  7,  8,  3,  3,  8,  2,  7,  2,  4, -1,  7, 10,  8,  5,  3, 10,  9,  3,  1,  2,  2,  2, -1,  8,  2, -1,  4,  3,  4],
[ 2,  5,  4,  1,  0,  5,  7,  0,  0,  6,  0,  2,  5,  6,  4, 10,  0,  0,  2,  4,  3,  5,  7,  5,  5,  5,  0,  5,  3,  0,  2,  3,  3,  2, 10,  4,  9,  0,  8,  0,  7,  7,  6,  4,  5,  5,  0,  8,  4,  7,  3,  2,  5,  6,  3,  3,  4,  0,  6,  0,  7,  7,  5, -1, -1,  4,  0,  3,  8,  9,  3,  5,  7,  8, 10,  4,  1,  2, 10, 10,  3,  7,  8,  9, -1,  9,  8,  5,  5,  4,  6,  7, 10, -1, 10,  9,  7, 10,  1,  5, 10],
[ 3,  4,  5,  1,  5,  5,  4,  0, -1,  0,  5,  5,  6,  4,  8,  6,  0,  1,  5,  6,  7,  3,  2,  2,  4,  6,  2,  0,  2,  2,  3,  6,  3,  6,  0, -1,  2, -1,  0,  0,  8,  0,  7,  3,  6,  5,  5,  3,  0,  0,  7,  5,  3,  4, -1, -1, -1,  0, -1,  0,  4,  0,  4,  5,  0,  0,  0,  5,  7,  4,  4, -1, -1,  8,  9,  7,  9,  5, -1,  6,  6,  7,  9,  4,  8, 10,  6,  5,  2,  4, 10,  7,  8,  1,  6, 10,  8,  2,  7,  9,  2],
[ 3,  6,  5,  5,  4,  2,  4,  0,  6,  3,  4,  0,  4,  5,  4,  5,  0,  5, 10,  5,  2,  6,  6,  8,  2,  3,  0,  0,  1,  5,  2,  5,  4,  3,  3,  0,  5,  0, 10,  3,  0,  0,  8,  0,  7, -1,  6,  5,  5,  5,  2,  0,  9,  4,  4,  0,  0,  0,  0,  3,  0,  0,  5,  0,  0,  0,  5,  3,  5,  0,  4,  4,  7,  7,  2,  8,  5,  2,  0, -1,  1,  3,  6,  4,  4,  0,  1,  7,  7,  3,  9,  4,  6, -1, 10, -1,  6,  6, 10,  4,  8],
[ 7,  3,  5,  4,  3,  3,  0,  6,  0,  0,  6, -1, -1,  5,  3,  5,  5,  3,  3,  0,  0,  0,  0,  5,  0,  2,  2,  0,  0,  0,  5,  4,  2,  3,  0,  0,  2,  0,  3,  8, 10,  0,  0,  3,  8,  8,  7,  6,  6,  0,  5,  0,  3,  3,  0,  0,  9,  1,  7,  0,  3,  3,  9,  1,  0,  0,  0,  3,  0,  3,  5,  3,  6,  3,  3,  0,  4, 10,  2,  5,  9,  9,  7,  2,  2,  7,  0,  4,  0,  4, -1,  2, -1,  5,  5,  7,  8,  6,  9,  9, -1],
[ 2,  6,  4,  0,  6,  5,  0,  5,  0,  0,  2,  6,  0,  7, -1,  6,  0,  3,  5,  5,  1,  0,  0,  6,  4,  0,  0,  0,  3,  0,  3,  2, -1,  0,  2,  4,  3,  1,  3,  2,  0,  3, 10,  3,  9,  9,  8,  3,  7,  7,  6,  3,  5,  1,  2,  0,  0,  1,  0,  8,  3,  4,  4,  0,  7,  0,  0,  0,  0,  0,  5,  4,  3,  4, 10,  9,  8, 10,  9, -1,  0,  9, -1,  0, -1,  7,  4, -1,  2,  2,  0,  1,  3, -1,  1,  9,  6,  9,  9,  7,  8],
[ 1,  3,  5,  4,  0,  0,  5,  5,  7,  5,  5,  6,  5,  2,  5,  4, -1,  0,  3,  0,  8,  3,  1,  0,  1,  0,  2,  4, -1,  4,  2,  9,  3, -1,  3,  5,  0,  3,  3,  1,  3,  1,  3,  2,  0,  9,  9,  0,  8,  6,  7,  2,  6,  3,  5,  1,  4,  9,  2,  3,  0,  0,  0,  2,  0,  0,  3,  0,  5,  0,  5,  5,  4,  1,  7,  4,  3,  9,  9, 10,  6,  9,  1,  0,  3,  8,  4,  0,  0,  9,  0,  9,  8,  8,  5,  9,  4,  6,  9,  4,  7],
[10,  5,  3,  5,  0,  3,  5,  5,  0,  4,  6,  5,  2,  8,  4,  4,  4,  4, -1,  0,  6,  4,  7,  8,  0,  5, 10,  4,  0,  0,  1,  0,  2,  4,  3,  2,  0,  4,  0,  0,  2,  3,  3,  0,  3,  3, 10,  9,  9,  0,  8,  7,  7,  2,  6,  4,  5,  4,  0,  1,  0,  1,  6,  0,  3,  3,  3,  0,  3,  6,  8,  2,  6,  3, 10,  3,  4,  6,  2,  3,  0,  4,  4,  9,  6,  7,  5,  1,  3,  8,  9,  6, 10,  1, -1,  4,  9, 10, -1,  1,  4],
[ 2,  3,  5,  5,  5,  5,  0,  4,  4,  5,  5,  5,  5,  5,  3,  5,  5,  5,  4,  7, -1,  5,  4,  0,  5,  7,  0,  0,  1,  3,  5, -1,  1,  6,  2, -1,  2, -1,  3,  2,  2,  2,  3,  4,  2,  2,  0,  3, 10,  4,  9,  0,  8,  2,  7,  6,  6,  6,  5,  6,  0,  0,  0,  0,  0,  2,  3, 10,  4,  0,  4,  0,  7,  0,  5,  5,  5,  5,  3,  4,  1,  3,  4,  3,  4, -1,  8,  4,  5,  7,  9,  7,  8,  2,  9, 10,  3,  4, -1, -1,  9],
[ 6,  3,  2,  4,  5,  6,  3,  0,  4,  5,  5,  6,  7,  5,  3,  4,  5,  7,  5,  0,  3, -1, -1,  6,  3,  6,  8,  4,  0,  6, 10,  2,  2,  0,  0, -1,  2,  2,  0,  0,  7,  4,  2,  2,  3,  3,  0,  3,  8,  0, 10,  0,  9,  2,  8,  3,  7, -1,  6,  0,  5,  8,  4,  0, -1,  0,  4,  0,  7,  1,  0,  6,  0,  9,  6,  0,  0,  5,  4,  0,  0,  9,  8,  5,  7,  9,  5,  4,  5,  6,  0,  4,  2,  7,  0,  8,  2,  7,  1, 10,  6],
[-1,  6,  6,  5,  0,  0,  3,  2,  0,  0,  5,  5,  5,  3,  5,  5,  0,  4,  4,  5,  4,  5,  6,  8, -1,  5,  0,  6,  7,  0,  0,  7,  1, 10,  2,  0,  1,  1,  2,  2,  3,  0,  2,  5,  2,  2,  3,  0,  3,  0,  0,  1, 10, -1,  9, -1,  8, -1,  7, -1,  6,  0,  5,  0,  0,  0,  0,  5,  0,  0,  0,  4,  6,  6, -1,  0,  6,  0,  6,  0,  5,  4,  4,  4,  7,  7,  2,  4,  2, -1, 10,  5, -1,  7,  8,  6, -1,  3, -1,  9,  8],
[ 8,  4,  5,  5,  4,  3,  0,  4,  0,  5,  4,  4,  6,  6,  5,  0,  6,  4,  5,  4,  5,  5,  2,  5,  5,  5, -1,  5,  1,  0,  5,  4,  0,  2,  1,  0,  1,  0,  1,  0,  0,  2,  2, 10,  3,  9,  0,  0,  3,  0,  3,  3,  3,  0, 10, -1,  9,  0,  8,  3,  7, -1,  6, -1,  0,  0,  0,  4,  3, 10,  8,  1,  4,  0,  0,  0,  0,  0,  0,  6,  5,  0,  4,  8, 10,  8,  8,  4,  0,  3,  5,  7,  0,  9,  0,  5,  1,  7,  0, 10,  2],
[ 2,  5,  5,  3,  0,  4,  0,  0,  6,  0,  5,  5, -1,  2,  6,  7,  0,  9,  0,  5,  4,  5,  5,  6,  4,  3,  7,  0, -1,  7,  3,  4,  6, 10,  1,  5,  3,  1,  2, 10,  0,  0,  0, -1,  2, 10, 10,  0,  2,  2,  3,  2,  3, -1,  4, -1, 10,  9,  9,  8,  8,  0,  7,  0,  6,  5,  0, -1,  0,  4,  9,  6, -1,  0,  0,  0,  0,  3,  0,  0,  0,  0,  0,  5,  5,  6,  6,  3,  1,  3,  1, -1,  7,  7,  3,  5, -1,  8,  8,  2, -1],
[ 4,  3,  4,  4,  0,  5,  5,  5, 10,  0,  4,  5,  5,  2,  7,  8,  0,  3,  4,  4,  5,  3,  4,  3,  0,  6,  5, -1,  7,  6, -1,  5,  5,  0,  5,  5,  1,  1, 10, 10,  1,  1,  0,  0,  2,  0,  0,  2,  0,  0,  1,  0,  0,  1,  3,  0,  4,  1,  1,  2,  9,  3,  0, -1,  7,  0,  6,  5,  5,  0,  0,  4,  0,  0,  0,  0,  1,  5,  8,  0,  0,  0,  6,  0,  6,  0,  7,  5, 10,  2,  0,  7,  2,  5,  0, -1,  7,  1,  4,  3,  8],
[ 5,  3,  5,  4,  3,  7,  0,  0,  0,  0,  4,  7,  6,  5,  7,  5,  0,  4,  5,  5,  5,  4,  5,  4,  0,  0,  3,  6,  0,  4,  6,  0, -1,  6,  8,  6, 10,  8,  7,  1,  1, 10,  1,  5,  0,  5,  2,  1,  0,  0,  0,  1,  2,  0, 10, -1,  3,  1,  3,  0, 10,  8,  9,  0,  8,  7,  7,  6,  6,  6,  5,  0,  4,  3,  8,  1, 10,  0,  8,  0,  0,  3,  0,  0,  4,  0,  5,  5,  9,  0,  7,  4,  9,  3,  9,  2, 10,  6, -1,  6,  9],
[ 7,  3,  0,  4,  0,  5,  4,  0,  3,  3,  5,  8,  7, 10,  4,  3,  0,  3,  6,  5,  6,  4,  3,  4,  4,  5,  7,  6,  5,  6,  1,  7,  4,  7, -1,  7,  9,  6, 10,  1,  1,  1, 10,  1,  1,  0,  2,  0, -1,  2, -1,  0, -1,  0,  2,  3,  2,  1,  1, 10,  3,  2,  0,  9,  9,  0,  8,  0,  7,  4,  6, -1,  5,  4,  1,  4,  0,  2,  9,  7,  2,  0,  0,  0,  0,  0,  0,  6,  0,  6,  5,  5,  1,  3,  2,  8, 10,  5,  5,  7,  0],
[ 1,  5,  5,  8,  5,  4,  0,  3,  0,  0,  3,  5,  3,  5,  5,  5,  0,  5,  9,  5,  4,  5,  6,  4,  4,  6,  8,  4,  4,  3,  5,  4,  3,  4,  5,  5, -1,  7,  5,  9,  8, 10,  1, -1,  1,  0,  2, 10,  1,  1,  2, 10,  3,  1,  3,  1,  0,  7,  1,  1,  3,  1,  0,  5, 10, -1,  9,  8,  8,  2,  7,  6,  6,  5,  5, 10,  4,  0,  9,  1,  3,  0,  8,  2,  0,  0,  4,  9,  6,  0, 10,  3, -1,  4,  9, 10,  8,  4,  8,  1,  8],
[10,  0,  4,  5,  4,  5,  0,  3,  3,  0,  3,  5,  4,  6,  0,  2,  0,  5,  6,  0,  5,  5,  4,  5,  5,  6,  0,  5, -1,  6,  7,  5,  4,  5, -1,  4, -1,  5, -1,  4, -1,  8,  9,  8,  1,  1,  9, -1,  1,  1,  1, 10,  2,  0,  1,  0,  2,  8,  2,  0,  3,  1,  3,  0,  9,  0, 10,  4,  9,  0,  8,  0,  7,  0,  6,  5,  5,  5,  4,  9,  0,  4,  0,  9,  0,  5,  0,  8, -1,  0,  0,  3,  2,  0,  1,  0,  6,  3,  0,  7,  7],
[ 6,  5,  3,  4,  4,  0,  0,  0,  0,  0,  2,  4,  5,  5,  0,  5,  5,  6,  0,  0,  3,  4,  5,  6,  4,  3,  5,  5,  9,  0,  5,  5,  5,  5,  6,  6,  0,  6,  2,  3, -1, -1, -1,  1,  1,  9,  1, -1,  1, 10,  0, -1,  1, -1,  2,  9,  2, -1,  2, 10,  0,  1, -1,  8,  1,  2,  4,  0,  1,  2,  9,  8,  8,  0,  7, -1,  6,  1,  5,  7,  7,  2,  0,  0,  2,  0,  9,  0,  3,  0, -1,  0,  3,  7, -1,  0,  3,  1, 10,  0, -1],
[ 6, 10,  3,  6,  0,  4,  0,  0,  5,  0,  2,  4,  6,  6,  0,  6,  0,  0,  0,  0,  4,  3,  5,  5,  4,  4,  3,  5,  5,  6,  4,  5,  5,  7,  4,  4,  5,  5,  0, -1, -1,  4, -1, -1, -1,  5,  8, -1,  1,  1,  1,  0,  0, -1,  1, 10,  2,  0,  0, -1,  3,  9,  0,  0,  3,  3,  3,  1,  0,  2, 10,  9,  9,  3,  3, -1,  7,  7,  6, -1,  5,  9,  0,  9,  0,  0,  0,  0,  3,  0, -1,  0, -1,  0, -1,  0,  1,  0,  0,  0,  3],
[10,  5,  2,  5,  4,  3,  0,  0,  0,  0,  0, 10, -1,  4,  5,  7,  4,  0,  0,  0,  7,  6,  4,  5,  4,  4,  0,  4,  5,  0,  5,  4,  4, -1,  4,  6,  5,  5,  5,  4,  5,  6,  6, -1, -1, -1,  6,  7,  9, -1,  1, -1,  1, -1,  0, -1,  1,  1,  2, -1, -1, -1,  2,  0,  0,  2,  2,  1, -1,  0,  4,  3, 10,  3,  9, -1,  8,  7,  7,  0,  6,  6,  5,  0,  4,  6, 10,  0,  0,  0,  0,  0, -1,  0, -1,  0,  0,  0,  6,  0,  1],
[ 0,  9,  3,  3,  4,  3,  0,  0,  0,  0,  2,  1,  6,  3,  4,  0,  0,  0,  2,  0,  6,  6,  4,  5,  5,  4,  0,  9,  6,  5,  4,  5,  5,  4,  6,  6,  0,  5,  6,  4,  3,  6, -1,  5,  5, -1, -1,  0,  6,  6, 10, -1,  1,  7, 10,  0,  2, -1,  1, -1,  2,  1, -1, -1,  2,  0,  0,  0,  3,  0,  4,  0,  0,  0,  0,  0,  9,  0,  0,  0,  7, -1,  6,  6,  5,  5,  4,  6,  9,  7,  0,  0,  3,  0, -1,  0,  0,  0,  7,  0,  1],
[ 6, -1,  0,  2,  5,  1,  0,  0,  6,  0,  9,  8,  7,  2,  3,  5,  4,  0,  0,  5,  7,  5,  1,  4,  0,  4,  5,  0,  0,  0,  4,  4,  5,  5,  4,  4,  5,  5,  4,  5,  6,  5,  0,  5,  4,  3,  5, -1, -1, -1,  0,  6,  8, -1,  1, -1,  1, -1,  2,  1,  2, -1,  2,  1,  2,  2,  2,  2,  2,  1, -1,  1,  3,  0,  1, 10, 10,  0,  9, -1,  8,  0,  7,  0,  6,  2,  5,  5,  0,  4,  0,  0,  0,  2,  8,  0,  0,  0,  8,  2,  6],
[ 1, 10,  6,  6,  6,  4,  0,  0,  0,  0,  8,  4,  4,  3,  0,  8,  0,  0,  0,  0,  2,  3,  3,  5,  0,  4,  0,  0,  0,  6,  2,  6,  6,  5,  5,  5,  4,  5,  6,  6,  4,  5,  5,  6,  5,  0, -1,  5,  5,  8, -1,  6,  6,  9,  8,  1,  1,  1,  1, -1,  1,  1,  1,  1,  2,  1,  2, -1,  0,  0,  2,  2, -1,  1,  3,  0,  2, -1, 10, -1,  9,  8,  0,  0,  7,  6,  6,  5,  5,  7,  0,  4, -1,  2,  1,  5,  0,  0,  0,  0,  1],
[-1,  6,  0,  7,  0,  0,  5,  0,  0,  0,  5,  3,  9,  0,  0,  0,  0,  5,  0,  0,  5,  3,  5,  7,  6,  4,  4,  7,  0,  0,  4,  5,  5,  7,  3,  3,  5,  4,  5,  0,  7,  5,  5, -1,  0,  6,  7,  4,  7,  7,  0, -1, -1, -1,  7,  6,  8,  8,  1,  1,  1, 10,  1, -1,  1,  1,  2,  0,  0,  1,  1, -1,  2, -1,  1,  1,  4,  1,  1,  1, 10,  2,  9,  0,  8,  7,  7,  6,  6,  0,  5,  7,  0, 10,  4,  1,  5,  2, 10,  0,  5],
[ 6, 10,  6,  2,  0,  0,  0,  0,  0,  5,  4,  6,  0,  0,  0,  3,  0,  5,  0,  8,  2,  6,  4,  6,  5,  0,  0,  0,  4,  0,  6,  4,  5,  8,  3,  6,  0,  5,  4,  4,  5,  5,  8,  6,  6,  0,  7, -1,  6,  7,  7,  0, -1, -1, -1,  9,  7,  8,  1,  8,  1, -1,  1,  1,  1,  1,  1,  0, -1,  1,  2,  2,  2, -1,  2,  1,  2,  1,  1,  2, -1,  2, 10, 10,  9,  0,  8,  8,  7,  7,  6,  9,  5,  1,  9,  1,  1,  1,  0,  1,  2],
[10,  1,  0,  5,  5,  0,  0,  0,  5,  0,  4,  2,  2,  0,  0,  5,  3,  5,  7,  0,  5,  6,  5,  3,  0,  4,  0,  4,  4,  5,  4,  4,  4,  4,  6,  5,  5,  5,  4,  5,  4,  4,  4,  5,  6,  4,  3,  4,  6,  5,  5,  8,  5, -1,  5, -1, -1, -1, -1, -1,  9,  1,  1,  1,  1,  1,  1,  1,  1, -1,  0,  1,  0,  1,  3,  1,  2,  1,  1,  0,  2,  0,  1, 10, 10,  9,  9, -1,  8, -1,  7,  9,  6,  1,  5,  1,  4,  8, 10,  1, -1],
[ 1,  6,  5,  8,  0,  0,  0,  6,  0,  0,  6,  2,  3,  3,  6,  6,  0,  4,  0,  5,  1,  7,  2,  2,  0,  3,  0,  6,  6,  0,  4,  5,  4,  4,  4,  5,  0,  5,  5,  3,  5,  5,  5,  4,  4,  5,  5,  5,  4,  8,  5,  4,  6,  5, -1, -1,  9,  5, -1,  6,  5, 10, 10, -1,  1, -1, 10, -1,  0,  1, -1,  0,  0,  0, -1,  1,  2,  1,  2,  2,  7,  1, 10,  1, -1, -1, 10,  9,  9,  0,  8, 10,  7, 10,  6,  9,  5, 10,  4, 10,  5],
[ 7,  6,  5,  5,  7,  0,  5,  0,  3,  0,  6,  0,  2,  5,  0,  0,  2,  0,  5,  0,  5,  5,  6,  2,  3,  5,  0,  5,  4,  0,  4,  5,  5,  4,  4,  4,  4,  4,  5,  5,  5,  6,  3,  5,  5,  4,  5,  5,  6,  7,  5,  5, -1,  5,  5, 10, -1, -1, -1, -1, -1,  9, -1, -1,  8,  1,  1,  1,  1, -1,  2,  2,  1, -1,  0, -1, -1, -1, -1,  6,  2,  1,  1,  1,  3,  0,  3,  0, 10, 10,  9,  9,  8, -1,  7, -1,  6,  1,  5,  9,  5],
[ 0,  2,  4,  5,  0,  6,  0,  0,  0,  0,  0,  6,  6,  5,  0,  3,  0,  0,  0,  6,  6,  5,  6,  2,  3,  0,  0,  0,  0,  0,  3,  4,  5,  5,  5,  4,  5,  4,  4,  0,  5,  4,  4,  5,  6,  4,  6,  5,  4,  4,  8,  5,  5,  6,  5,  7,  6,  5,  6, -1, -1,  1, -1, 10,  1,  9,  9,  1,  1, -1,  1,  1,  1, -1,  1,  0,  0, -1,  0,  0, -1,  1,  1,  1,  3,  3,  0,  2,  0,  0, 10, -1,  9, -1,  8, -1,  7, 10,  6, 10,  3],
[10,  8,  4,  5,  5,  7,  0,  0,  0,  0,  3,  5,  0,  0, -1,  0,  0,  0,  5,  0,  6,  5,  5,  2,  0,  5,  0,  0,  0,  0,  3,  5,  5,  4,  5,  5,  0,  5,  0,  5,  6,  6,  3,  4,  5,  3,  5,  4,  4,  0,  5,  4,  6,  5,  6, -1,  6,  5,  5,  5, -1, -1, -1,  6, -1,  6, -1,  1,  9, 10,  1,  1,  1,  1,  2,  1,  1, -1, -1, -1,  0,  0, -1, 10,  2,  1, -1,  0,  2,  0,  6,  0, 10, -1,  9, -1,  8,  7,  7,  1, -1],
[ 4,  2,  5,  5,  0,  8,  0,  0,  0,  8,  6,  6,  6,  5,  0,  6,  0,  4,  0,  0,  7,  0,  4,  7,  6,  2,  0,  3,  0,  0,  4,  5,  4,  4,  5,  4,  0,  0,  5,  0,  4,  4,  4,  5,  5,  6,  4,  5,  5,  6,  5,  7,  6,  4,  5,  5,  5,  5,  6,  7,  7,  5, -1, -1, -1, -1, -1,  3, -1, -1,  9,  9,  1, -1,  1,  1,  1, -1,  1,  1,  2,  0,  0,  0, -1,  2,  2,  0,  3,  0,  3,  0,  3, 10, 10, -1,  9,  9,  8,  7,  3],
[-1,  6,  4,  4,  6,  0,  5,  0,  0,  0,  0,  3,  0,  5,  7,  0,  0,  0, -1,  0,  0,  0,  5,  7,  0,  2,  0,  0,  0,  0,  5,  3,  3,  4,  0,  0,  0,  6,  0,  0,  4,  0,  5,  5,  5,  5,  0,  0,  3,  0,  3,  6,  3,  5,  4,  2,  4,  6,  5,  6,  5,  5,  0, -1,  5,  6,  7, -1, -1, -1, -1,  6,  1, -1,  1,  1,  1,  1,  2,  1,  1, -1,  2,  0,  0,  0,  3,  2,  2,  2,  4,  0,  7, -1,  3,  2, 10, -1,  9, -1,  8],
[10,  8,  4,  5,  5,  6,  0,  6,  6,  6,  3,  6,  0,  7,  0,  9,  4,  0,  0,  7,  3,  0,  6,  8,  0,  0,  0,  0,  0,  6,  3,  4,  5,  0,  6,  3,  5,  0,  0,  0,  6,  5,  0,  5,  0,  5,  6,  4,  4,  5,  5,  4,  5,  3,  2,  5, -1,  6,  4,  5,  5,  7, -1,  7,  7, -1,  7, -1,  6, -1, -1, -1,  4,  8,  6, -1,  1,  1,  1,  1,  2,  1,  1,  2,  2,  0,  0,  0,  3,  0,  2,  2,  4, -1,  3,  0,  3,  3, 10,  3,  8],
[-1, -1,  3,  5,  4,  0,  5,  0,  5,  0,  2,  9,  5,  0,  5,  0,  4,  0,  0,  0,  3,  7,  1,  0,  0,  2,  0,  0,  6,  0,  3,  4,  3,  6,  0,  4,  0,  0,  0,  4,  0,  0,  5,  0,  5,  0,  4,  0,  0,  5,  3,  4,  0,  5,  5,  0,  5,  4,  0,  4,  5,  5, -1,  5,  7, -1,  8, -1, -1, -1, -1, -1, -1, -1,  9,  9,  7,  1,  1,  1,  1, -1,  1,  2,  2,  2,  2,  0,  0,  1,  0,  2,  2,  0,  3,  5,  3,  4,  8, -1,  8],
[ 6,  4,  4,  5,  5,  5,  0,  8,  0,  0,  8,  6,  0,  6,  4,  7,  6,  6,  0,  6,  6,  6,  0,  1,  0,  7,  0,  0,  0,  0,  2,  3,  5,  2,  6,  5,  0,  5,  0,  0,  0,  5,  5,  4,  5,  5,  9,  0,  7,  7,  5,  6,  5,  3,  6,  6,  8,  2,  4,  5,  7,  5,  8,  7, -1, -1,  5, -1, -1,  6, -1, -1, -1, -1, -1, -1, -1, -1, 10, -1,  1,  1,  9,  1,  2,  2,  9,  1,  2,  1,  3,  2,  0,  0,  2,  1,  3,  2,  2,  4,  3],
[ 1,  7,  2,  5,  6,  7,  6,  9,  1, -1,  0,  0,  7,  2,  0,  0,  0,  3,  0,  0, -1,  5,  0,  4,  0,  0,  0,  0,  0,  0,  3,  4,  1,  6,  6,  4,  0,  3,  4,  0,  5,  5,  0,  4,  4,  4,  0,  5,  5,  4,  4,  4,  6,  5,  5,  6,  5,  5,  4,  5,  5,  5,  4,  0,  5,  4,  4,  5,  5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  7, 10,  1,  1, 10,  1,  7,  2, -1,  2,  1,  2,  1,  3,  4,  0, -1,  2,  2,  4,  9,  8],
[ 0,  0,  4,  4,  5,  6,  0,  8,  0,  8,  8,  8,  0,  2,  0,  6,  0,  8,  6,  2,  3,  0,  6,  8,  0,  0,  0,  0,  6,  3,  4,  4,  4,  7,  0,  3,  0,  0,  0,  5,  4,  4,  4,  4,  5,  0,  6,  9,  0,  5,  5,  5,  6,  5,  5,  5,  0,  5,  6,  5,  0,  0,  5,  6,  6,  5,  5,  5,  6, -1, -1, -1,  8, -1, -1, -1, -1, -1, -1, -1, 10,  1,  9,  1,  1,  1, 10,  1,  2,  1,  1,  8,  2,  9,  3,  0,  0,  0,  2,  7,  3],
[ 7,  3,  2,  5,  4,  4,  5,  0,  5,  0,  4,  5, -1,  0, -1,  0,  0,  0,  5,  0,  0, -1, -1,  5,  9,  5,  0,  0,  0,  0,  3,  6, 10,  5,  4,  4,  0,  3,  5,  0,  4,  6,  4,  8,  5,  5,  4,  4,  5,  3,  5,  6,  5,  4,  5,  5,  0,  6,  9,  5,  0,  0,  4,  0,  0,  0,  8,  5,  7,  5,  5, -1,  6,  6, -1, -1, -1, -1, -1, -1, -1, -1,  9,  9, 10, 10,  1,  1,  1, -1,  2,  1,  1,  2,  2,  1,  3,  6,  0,  1,  7],
[10,  7,  5,  6,  4,  5,  0,  6,  6,  6,  4,  9,  6, 10,  0,  0,  7,  7,  0,  8,  6, -1,  0,  6,  6,  0,  0,  0,  0,  0,  8,  2,  4,  4,  3,  3,  0,  6,  0,  0,  4,  3,  4,  3,  5,  4,  0,  3,  5,  0,  5,  5,  6,  5,  5,  4,  6,  6,  5,  3,  0,  5,  0,  0,  8,  5,  4,  4,  4,  9,  5,  6,  8, -1,  4, -1,  5, -1,  8,  2, -1, -1, -1, -1, -1,  6,  1,  1,  1, 10,  1,  9,  1,  0,  2,  7,  2,  6,  3,  0,  3],
[ 4,  3,  2,  0,  4,  0,  4,  0,  5,  0,  1, -1,  2,  0,  0,  0,  0,  0,  2,  0,  3,  0,  2,  0,  7,  7,  5,  0,  0,  0,  3,  3,  5,  4,  3,  4,  0,  0,  0,  0,  0,  6,  3,  4,  5,  3,  0,  5,  0,  0,  5,  4,  4,  6,  5,  5,  0,  5,  5,  0,  5,  0,  0,  0,  7,  0,  0,  5,  5,  6,  5,  5,  3, -1,  4, -1,  5,  8, -1, -1, -1,  1, -1, -1, -1, -1,  1,  8,  7,  8,  1, -1,  1,  0,  2,  1,  0,  8,  2,  7, -1],
[ 2,  7, 10,  3,  5,  4,  0,  5,  0,  8,  5,  0, -1,  8,  6,  1,  0,  2,  0, -1,  0,  6,  0, -1,  8,  0,  0,  0,  0,  0,  3,  4,  7,  6,  0,  4,  0,  0,  0,  4,  5,  3,  5,  4,  4,  4,  0,  0,  5,  5,  6,  4,  5,  4,  4,  7,  0,  0,  4,  0,  0,  0,  0,  5,  0,  0,  4,  4,  5,  0,  5,  5,  0,  0,  5,  6, -1,  6,  8, -1, -1, -1, -1,  1, -1, -1, -1, -1,  7, -1,  8,  1,  1,  0,  9,  9,  2,  2,  2,  5,  2],
[ 1, -1,  1,  0,  5,  0,  7,  0,  4,  0,  6,  5,  0,  9,  6,  0,  0,  0,  5,  0,  9,  1,  0, -1, -1,  5,  9,  0,  0,  0,  2,  3,  5,  3,  6,  6,  0,  4,  0,  0,  0,  4,  3,  0,  4,  3,  0,  3,  0,  0,  5,  4,  4,  2,  4,  5,  0,  0,  3,  5,  0,  0,  5,  0,  0,  4,  0,  0,  5,  5,  3,  4,  0,  0,  6,  7,  5,  5,  6, -1,  8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  7,  8,  1,  5,  1,  1,  2,  6, -1],
[ 4,  6,  7,  4,  6,  4,  4,  5,  0,  5,  6,  5,  6, 10,  6, -1,  0,  0,  0,  7,  0,  7,  0, -1,  0,  6,  0,  0,  0,  0,  2,  3,  3,  5,  0,  4,  0,  0,  0,  0,  4,  0,  0,  0,  0,  5,  0,  5,  0,  0,  6,  4,  6,  4,  4,  4,  0,  0,  0,  0,  0,  4,  0,  0,  4,  0,  0,  5,  5,  0,  5,  5,  0,  0,  4,  5,  0, -1,  5,  5,  5,  7, -1,  9,  0,  6, -1, 10, 10,  1, -1, -1,  0, -1,  8, 10,  1, 10,  1,  6, -1],
[ 9, 10,  0,  0,  0,  0,  0,  0,  5,  0,  5,  7,  0,  0,  0,  0,  1,  0,  0,  0,  0, -1, 10,  0,  0,  7,  7,  0,  0,  0,  9,  7,  2,  2,  0,  5,  0,  0,  0,  0,  7,  0,  0,  0,  0,  0,  3,  0,  0,  0,  4,  6,  0,  6,  3,  5,  5,  0,  0,  0,  4,  0,  5,  3,  5,  6,  0,  0,  5,  0,  0,  0,  0,  5,  5,  0,  0,  4,  5,  0,  1, -1,  7, -1,  1,  1,  6,  7,  1,  8,  0, -1, -1,  0,  1, 10,  8, 10,  1,  9,  8],
[ 1, 10,  8,  0,  5,  3,  7,  4,  5,  4,  6,  0,  0,  8,  3,  3,  0,  8,  0,  0,  6,  8,  4,  0,  0,  4,  0,  8,  0,  9,  1,  8,  1,  3,  4,  0,  0,  3,  4,  5,  0,  5,  0,  6,  0,  5,  0,  0,  0,  0,  5,  5,  4,  4,  4,  5,  0,  0,  0,  8,  0,  0,  6,  0,  0,  0,  6,  0,  4,  4,  5,  5,  1,  4,  0,  0,  5,  7,  6,  7,  8, -1, -1,  6,  1,  6,  1, -1, -1,  7, -1, -1,  1,  1, -1, 10,  2,  6,  8,  6,  6],
[10,  2,  8,  0,  1,  2,  0,  0,  3,  4,  4,  5,  7,  0,  5,  0,  0,  0,  2,  0, -1, 10,  3,  0,  0, -1, -1,  7,  1,  0,  8,  2,  0,  3,  0,  6,  0,  9,  0,  0,  3,  0,  0,  0,  8,  7,  0,  0,  0,  0,  4,  5,  5,  4,  2,  4,  6,  4,  6,  0,  0,  5,  5,  4,  3,  5,  0,  0,  6,  5,  5,  6,  8,  8,  5,  8,  5,  5,  5, -1,  8,  5,  5, 10,  6,  8,  1, -1, -1, -1, -1,  1,  1,  1,  8, -1, -1, -1,  7,  7,  8],
[ 9,  6,  8,  5,  6, -1,  0,  5,  6,  6,  7,  5,  0,  6,  0, 10,  0,  6,  0,  7, -1,  0, 10,  4,  0,  0,  0,  6,  0,  8,  8,  2,  2,  3,  0,  0,  0,  0,  0,  0,  3,  8,  0,  5,  0,  4,  0,  0,  0,  0,  5,  4,  3,  3,  4,  6,  0,  6,  6,  0,  6,  0,  0,  6,  5,  6,  4,  4,  0,  0,  6,  5,  6,  5,  5,  6,  4,  6,  6,  6,  5,  5,  5, -1, 10,  8,  8,  5, -1,  8,  0,  1,  1,  8,  9,  0,  5,  4, -1,  5,  0],
[ 6,  3,  2,  8,  9,  1,  0,  0,  0,  0,  8,  2,  5,  0,  5,  0,  0,  0,  0,  0, -1,  2,  6, -1,  1,  0, -1, -1,  4,  9,  1,  1,  2,  2,  0,  5,  0,  0,  0,  0,  4,  7,  5,  0,  2,  3,  0,  0,  0,  4,  4,  5,  5,  4,  6,  4,  5,  4,  3,  5,  6,  4,  0,  6,  0,  5,  4,  4,  5,  6,  5,  5,  7,  5,  5,  4,  6,  6,  4,  5,  4,  7,  7,  7, -1,  5, -1,  7,  5, -1,  6, -1, -1, -1, -1, -1,  5,  3, 10, 10,  0],
[ 3, 10,  8,  4,  3,  8,  3,  5,  0,  5,  4,  5,  5,  8,  0,  8,  0,  8,  0,  6,  8,  0,  7,  5,  7,  8,  0,  0,  0,  8, 10, 10,  2,  2,  3,  2,  0,  0,  0,  0,  0,  4,  0,  4,  4,  2,  5,  5,  5,  0,  3,  4,  4,  4,  3,  5,  0,  5,  6,  4,  6,  0,  5,  4,  5,  5,  5,  5,  5,  5,  5,  4,  4,  4,  5,  6,  5,  5,  5,  4,  5,  5,  5, -1,  3, -1, -1,  5,  7,  8,  7,  8, -1, -1,  4,  2, -1,  5,  7, -1,  1],
[ 6,  8,  6,  1,  6,  4,  7,  0,  0,  0,  3,  0,  5,  4,  2,  0,  5,  0,  0,  0,  0,  0,  9,  0, -1,  0,  0, -1,  0,  7,  0,  0,  1,  6,  0,  2,  0,  0,  3,  0,  3,  0,  4,  0,  5,  3,  0,  4,  0,  4,  3,  4,  4,  5,  4,  3,  2,  0,  0,  5,  0,  6,  4,  5,  6,  3,  5,  3,  6,  4,  4,  5,  4,  5,  6,  6,  4,  4,  5,  4,  6,  4,  6,  6, -1,  5, -1, -1,  5,  5, -1, -1, -1, -1,  5,  3,  6,  6, -1,  3, -1],
[ 5,  1, 10, -1,  5,  2, 10,  9,  4,  0,  5,  6,  4,  6,  0,  0,  0,  6,  0,  6,  7,  4,  6,  3,  0,  7,  0, -1,  0,  6,  1,  0,  1,  2,  8,  3,  0,  9,  0,  0,  4,  6,  5,  0,  4,  0,  4,  3,  4,  0,  2,  5,  0,  6,  4,  5,  0,  5,  5,  5,  5,  0,  0,  5,  0,  5,  0,  6,  0, 10,  5,  5,  6,  5,  5,  4,  7,  5,  6,  5,  5,  6,  6,  4,  4,  9,  5,  6,  5,  6, -1,  6, -1,  6,  3,  3,  2,  2,  0,  4, 10],
[ 3,  1,  2,  1, 10,  1,  7,  0,  0,  0,  5,  4,  3,  4,  7,  5,  1,  0,  7,  0,  5,  0,  5,  0,  5, -1,  0,  0, -1,  0,  0,  7,  1,  7,  0,  0,  0,  0,  7,  0,  4,  0,  3,  5,  3,  5,  0,  3,  0,  0,  5,  5,  5,  4,  6,  5,  0,  5,  0,  5,  5,  0,  4,  0,  0,  0,  6,  4,  3,  4,  4,  4,  4,  7,  6,  0,  3,  5,  5,  5,  5,  6,  5, -1, -1, -1,  4,  5,  5,  5, -1, -1, -1, -1, 10,  4, 10,  8,  3,  6,  0],
[ 5, -1,  5,  9,  7,  1,  8,  7,  9,  2,  5,  4,  5,  5,  0,  6,  0,  8,  0,  0,  0,  0,  0,  5,  0,  9,  6,  8,  9,  6,  8,  8,  6, -1,  0,  0,  0,  3,  0,  0,  0,  2,  9,  4,  5,  0,  0,  0,  0,  0,  0,  4,  3,  4,  4,  4,  0,  3,  6,  0,  0,  5,  0,  0,  0,  0,  0,  0,  0,  5,  4,  6,  5,  4,  0,  4,  5,  7,  7,  6,  4,  4,  6,  4,  3,  3,  7,  6,  9,  4,  5,  7,  8, -1,  6,  0,  9,  5,  0,  0,  3],
[ 4,  0, 10,  1,  9,  9,  4,  4,  6,  0,  1,  4,  2,  0,  0,  5,  8,  0,  5,  0,  0,  5,  1,  0,  0,  0, -1,  0,  0,  3,  0,  0,  7,  1,  0,  0,  0,  0,  0,  0,  0,  4,  2,  4,  5,  0,  0,  0,  0,  0,  5,  4,  5,  4,  4,  3,  0,  6,  0,  0,  0,  0,  6,  0,  0,  0,  3,  4,  0,  7,  6,  5,  6,  0,  0,  4,  7,  5,  4,  4,  6,  4,  5,  4,  3,  5,  5,  4,  5,  5,  7,  4,  1,  5,  7,  0,  0,  9,  8,  3,  9],
[ 9,  7,  0,  0,  8,  0,  4,  9,  1,  0,  2,  5,  0,  5,  5,  6,  0,  8, 10,  0,  0,  8,  0,  9,  5,  6,  6,  8,  8, -1,  8,  8,  6,  1,  0,  7,  0,  0,  0,  0,  0,  5,  4,  5,  6,  0,  0,  0,  0,  4,  4,  6,  3,  4,  4,  0,  5,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  5,  7,  4,  5,  0,  4,  4,  4,  4,  4,  5,  0,  4,  5,  6,  5,  6,  5,  0,  5,  4,  6,  4,  5,  5,  0,  0,  0,  8,  3,  6,  1,  0,  8],
[ 0,  5,  3, 10,  0,  2,  1,  8,  0, 10,  2,  2,  4,  3,  5,  0,  5,  5,  8,  0,  2,  5,  0,  0,  0,  0,  0, -1,  0,  0, -1, -1,  0,  2,  9,  0,  0,  0,  0,  0,  0,  4,  3,  3,  0,  0,  0,  0,  4,  0,  2,  3,  1,  4,  3,  5,  0,  0,  0,  0,  0,  0,  5,  0,  0,  0,  0,  0,  0,  5,  6,  0,  5,  4,  3, 10,  5,  6,  4,  0,  5,  5,  4,  4,  6,  2,  5,  4,  5,  0,  5,  0,  4,  3,  2,  2,  8,  3, -1,  4,  3],
[ 8,  0,  4,  9,  1,  2, 10, -1,  4,  0,  7,  3,  4,  6,  5,  5,  0, 10,  0, 10, -1,  0,  0,  8,  8,  6,  0,  8,  0,  6, -1, -1,  8,  4,  8,  0,  0,  0,  0,  0,  5,  4,  0,  0,  0,  0,  0,  4,  0,  0,  3,  0,  3,  0,  5,  3,  0,  0,  0,  0,  0,  0,  0,  0,  0,  7,  0,  4,  5,  0,  4,  6,  2,  3,  4,  5,  6,  0,  4,  4,  4,  0,  6,  0,  4,  4,  5,  5,  4,  5,  0,  4,  9,  2,  3,  0,  4,  5,  0,  5, -1],
[ 4,  3,  0, 10, 10,  5, 10, 10,  7,  3,  3,  5,  3,  0,  4,  0,  5,  5,  4,  0, -1,  2,  7,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  7,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  3,  4,  0,  5,  4,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  5,  4,  0,  0,  0,  0,  3,  4,  6,  0,  3,  4,  5,  4,  6,  3,  5,  4,  4,  5,  4,  5,  0,  4,  5,  4,  1,  2,  5,  6,  9,  4,  5,  0],
[ 9,  8, 10, 10,  7,  4, -1,  0,  1,  0,  3,  4,  5,  7,  5,  4,  0,  7,  6,  8,  0,  0, -1,  4,  0,  6,  4,  6,  0,  7,  0,  8, -1,  0,  8,  1,  8,  0,  0,  0,  0,  0,  0,  0,  0,  6,  0,  0,  0,  0,  5,  9,  6,  3,  3,  3,  0,  0,  0,  6,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  5,  4,  5,  8,  4,  4,  3,  4,  5,  0,  5,  4,  4,  5,  5,  5,  6,  5,  5,  0,  0,  0,  0,  0,  2,  0,  0,  0,  1,  2,  8],
[ 2,  8, 10,  6,  7,  7,  8,  7,  3,  2,  5,  1,  4,  0,  3,  0,  4,  0,  5,  0,  0,  0,  2,  5,  7,  0,  0,  0,  0,  0,  0,  0, -1,  0, -1,  1,  1,  8,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,  4,  4,  5,  0,  4,  4,  0,  4,  5,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  5,  0,  5,  4,  4,  2,  0,  5,  6,  0,  5,  0,  0,  0,  6,  0,  5,  6,  6,  4,  0,  5,  0,  7,  5,  5,  0,  0,  1, 10, 10,  5],
[ 3,  8,  2, -1,  9, 10,  9,  5, -1,  8,  6,  0,  5,  2,  5,  4,  4,  5,  0,  6,  0,  0,  0,  3,  8,  4,  0,  8, 10,  8, -1,  0, -1, -1,  0,  0,  8,  0,  0,  0,  0,  0,  0,  3,  0,  6,  0,  0,  0,  0,  4,  7,  4,  3,  5,  4,  0,  3,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  5,  0,  0,  0,  7,  5,  5,  5,  0,  0,  0,  0,  6,  6,  6,  4,  6,  0,  0,  0,  0,  6,  6,  5,  5,  1,  5,  8,  5, 10],
[ 4,  0, -1,  4,  3,  2, -1,  4,  9, -1,  3,  6,  4,  4,  7,  0,  0,  0,  5,  0,  9,  0,  0,  0,  5,  0,  4,  0,  4,  0, -1,  0,  0, -1, -1,  0,  7,  0,  0,  0,  0,  0,  0,  0,  0,  3,  0,  0,  3,  0,  4,  6,  3,  4,  4,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  5,  0,  5,  0,  0,  0,  0,  0,  4,  6,  3,  0,  0,  0,  0,  5,  6,  6,  7,  5,  6,  0,  6,  0,  4,  4,  7, 10,  5,  4,  6,  5, -1],
[10,  8,  0, -1,  2,  5,  1,  5,  7,  1,  4, -1,  3,  6,  6,  4,  0,  6,  0,  5,  6,  0,  0, -1,  0,  0,  0,  9,  7,  4,  6, -1,  0, -1,  8, -1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  4,  5,  2,  5,  0,  2,  0,  0,  0,  0,  0,  0,  0,  3,  0,  0,  0,  0,  0,  5,  0,  0,  0,  5,  6,  0,  0,  0,  0,  3,  0,  6,  4,  5,  5,  5,  6,  6,  5,  0,  7,  6,  7, -1,  2,  8,  3,  8, -1],
[ 5,  7,  4,  9,  1, -1,  5,  3,  5,  3, 10,  6, 10,  9,  0,  0,  0,  0,  3,  7,  7,  9,  0,  0,  0,  0,  7,  0,  0,  6,  0, -1,  0,  0, -1, -1, -1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  5,  3,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  3,  0,  0,  0,  0,  0,  0,  4,  5,  0,  5,  0,  4,  3,  0,  0,  6,  5,  4,  5,  5,  8,  5,  7,  2,  4,  4,  7,  6,  9,  6, 10,  8,  9],
[ 7,  2,  3,  0,  9,  5,  4,  4,  8, 10,  5,  9,  1,  6,  3, 10,  4,  8,  5,  5,  7,  6,  6, 10,  0, 10,  0, -1,  0,  6,  6, -1,  7,  0,  0, -1, -1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  3,  6,  5,  4,  5,  0,  0,  3,  0,  0,  0,  0,  4,  0,  0,  0,  6,  0,  0,  0,  4,  0,  9,  5,  0,  7,  0,  0,  4,  4,  6,  0,  4,  5,  5,  5,  6,  5,  4,  4,  2,  4,  5,  8,  4,  4,  5,  8,  3,  8],
[ 5, -1,  4,  8,  7,  7,  5,  5,  9,  4,  6,  9, 10,  5,  4,  2,  0,  5,  6,  0,  4,  6,  7,  0,  7,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1, -1, -1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  3,  1,  3,  0,  0,  0,  4,  0,  0,  6,  0,  0,  0,  0,  0,  0,  0,  4,  4,  4,  6,  0,  5,  4,  2,  4,  0,  6,  9,  0,  4,  4,  4,  5,  6,  3,  4,  5,  9,  0,  8,  5,  5,  5,  4,  5,  9,  0],
[ 6, -1,  7,  2,  5,  5,  1,  5,  4, 10,  2,  9,  2,  5,  7,  5,  3,  2,  5,  4,  5,  6,  5,  6,  0,  2,  0, 10,  0,  6,  8,  7,  8,  6,  0,  0, -1, -1,  1,  1,  0,  0,  0,  0,  3,  3,  0,  0,  0,  0,  0,  5,  3,  0,  0,  0,  0,  9,  0,  0,  0,  7,  0,  6,  0,  0,  0,  0,  0,  4,  5,  5,  6,  8,  0,  0,  5,  4,  4,  5,  4,  4,  0,  5,  5,  3,  6,  6,  5,  4,  4,  9,  3,  4,  4, 10,  4,  4,  7,  0,  7],
[ 1, -1,  1,  0,  5,  1,  0,  3,  2,  3, 10,  4,  4,  6, -1,  4,  7,  0,  0,  0,  5,  4,  5,  9,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  0,  0, -1, -1, -1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  5,  4,  0,  3,  0,  4,  0,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,  4,  5,  6,  5,  4,  0,  0,  3,  5,  0,  4,  4,  5,  5,  7,  5,  6,  4,  6,  4,  3,  7, 10,  3,  4, 10,  6,  6,  4,  5,  0],
[ 6,  6,  3,  2,  9,  7,  6,  2, 10,  5,  1,  8,  6,  9,  3,  8,  8,  6,  5,  5,  4,  6,  5,  7, 10,  6,  0,  6,  6,  3,  4,  5, -1,  6,  3,  9, -1, -1, -1, -1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  2,  4,  3,  4,  0,  0,  4,  0,  0,  0,  0,  0,  4,  0,  0,  0,  3,  3,  0,  4,  4,  4,  5,  5,  3,  5,  6,  3,  0,  3,  5,  5,  3,  4,  4,  4,  5,  4,  4,  0, -1,  5,  2,  6,  3,  6,  3,  5, 10,  5],
[-1,  5, -1,  2,  6,  6,  6,  3,  6,  3,  7,  2,  8,  6,  4,  5,  0,  2,  0,  0,  5,  5,  5,  4,  1,  0,  2,  0,  0,  0,  3,  0,  0,  0, -1,  0,  0, -1, -1, -1,  0, 10,  0,  0,  0,  2,  0,  4,  0,  0,  3,  2,  3,  3,  0,  4,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  3,  5,  5,  5,  4,  4,  3,  0,  0,  0,  5,  5,  6,  4,  0,  0,  0,  4,  6,  0, -1,  0,  6,  0,  0,  0,  0,  0,  0,  5],
[ 9, 10,  5,  4,  9,  2,  8,  9,  0,  2,  3,  3,  6,  3,  4,  5,  9,  9,  0,  0,  6,  5,  0,  7,  0, -1,  0,  0,  0,  0,  3,  6,  8,  8, -1,  8,  0, -1, -1, -1,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  4,  2,  3,  0,  5,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,  0,  0,  3,  0,  4,  5,  4,  5,  0,  3,  0,  0,  5,  0,  6,  4,  0,  0,  0,  0,  3,  6,  0,  8,  0,  0,  0,  0,  0,  0,  0,  0,  6],
[ 5,  8,  9,  0,  0,  2,  3,  5,  0,  7,  5,  8,  6, 10,  2,  8,  8,  0,  0,  0,  2,  3,  7,  6,  3,  5,  7,  2,  2,  0, -1,  0,  0,  0,  0, -1,  0,  0, -1, -1, -1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  2,  0,  0,  4,  4,  3,  0,  0,  0,  0,  0,  0,  0,  3,  0,  0,  0,  4,  0,  0,  0,  0,  7,  4,  5,  0,  0,  0,  0,  0,  0,  8,  6,  3,  0,  0,  0,  0,  5,  0,  0,  5,  6,  0,  0,  3,  4,  3,  0,  0, 10],
[ 2,  1,  2,  9,  9,  1,  0,  1,  0,  0,  1,  2,  5, 10,  2,  3,  5,  4,  1,  0,  0,  4,  5,  5,  7,  6,  0,  0,  0,  1,  3,  8,  8,  6,  0,  2,  0,  6, 10, -1, -1,  0,  0,  9,  0,  0,  0,  0,  0,  0,  0,  0,  3,  5,  3,  3,  0,  0,  0,  0,  0,  0,  9,  0,  0,  0,  0,  0,  0,  0,  0,  4,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  5,  0,  0,  5,  0,  6,  0,  0,  0, -1,  3,  4,  6,  0,  0,  0,  0,  0, 10],
[ 2,  8,  6,  5,  2,  8,  4, 10,  6,  0,  2,  7,  3,  1,  0,  0,  5,  0, 10,  2,  3,  2,  3,  5,  6,  0,  5,  0,  1,  0,  0,  2,  0,  0,  0,  0, -1,  0,  0, -1, -1, -1,  7,  0,  0,  1,  0,  0,  0,  0,  0,  4,  3,  3,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  0,  4,  0,  0,  0,  0,  5,  0,  0,  0,  0,  0,  0,  5,  5,  0,  0,  2, -1,  0,  2,  0,  0,  0,  0,  0,  0,  2],
[ 0,  3,  3,  2,  2,  8,  2,  4,  5,  6,  3,  4,  1, -1,  0,  8,  2,  6, -1, 10,  5,  0,  5,  5,  5,  5,  0,  1,  0,  8,  3,  3, -1,  6,  0,  7,  0,  8,  0, -1, -1, -1,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  4,  5,  0,  0,  0,  5,  0,  0,  5,  0,  0,  0,  5,  0, -1,  8, 10,  0,  0,  0,  0,  0,  3,  1],
[ 9,  6, -1,  1,  6,  0,  6,  1, -1,  0, 10,  4,  0,  2,  6,  0,  1, 10,  7,  1,  0,  3,  3,  0,  6, -1,  6,  4,  7,  0,  0,  2,  2,  7,  6,  0,  0, -1,  0,  0, -1, -1,  7,  0,  7,  8,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  5,  2,  0,  0,  0,  0,  4,  0,  0,  0,  9,  0,  4,  9,  0,  5,  0,  0,  0,  0,  0, 10,  0,  0,  0,  0,  0,  4,  0,  5],
[ 1, 10,  1,  9,  6, 10,  6,  5,  0,  4,  0,  5,  8,  2,  2,  2,  9,  3, 10,  9,  1,  8,  6,  3,  6,  5,  0,  5,  0,  6,  0,  6, -1, -1,  8,  0,  0, -1, -1,  7, -1,  8, -1,  0,  0,  0,  0,  0,  0,  0,  0,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,  9,  0,  0,  0,  8, 10,  2,  9,  0,  4,  0,  6,  0,  0,  0,  3,  0,  0,  7,  0,  0,  3,  3,  7,  7,  0,  9,  4,  0,  0,  7],
[ 7, 10,  1,  2, -1,  9,  6,  2, 10,  0, 10, 10,  4, -1,  8,  3,  2,  4,  6,  4,  8,  6,  2,  0,  6,  0,  4,  0,  5,  0,  0,  0,  0,  5,  5,  0,  0,  0, -1,  0,  2,  0, -1, -1,  1,  0,  0,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  8,  5,  0,  0,  3,  0,  6,  4,  5,  0,  5,  4,  8,  6,  2,  5,  0,  5,  0,  0,  6,  4,  5,  5,  4,  4,  0,  4,  0,  0,  4,  4,  0,  6],
[ 1,  7,  0,  6,  8,  3,  1,  4,  3,  5, -1,  5,  5,  5,  5,  5,  4, -1,  5,  4,  5,  8,  5,  5,  4,  5,  5,  5,  0,  6, 10, 10,  8,  3,  6,  7,  0,  3,  0,  8,  0,  5, -1, -1,  0,  0,  0,  0,  0,  0,  3,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  5,  0,  0,  6,  3,  2,  4,  8,  4,  4,  4,  3,  0,  5,  5,  3,  0,  0,  5,  6,  5,  5,  0,  5,  5,  5,  5,  5,  5,  5,  9,  5,  5,  8],
[ 0,  4,  1,  8,  9,  5,  0,  6,  6,  6,  4,  5,  5,  8,  6,  6,  5,  6,  4,  6,  6,  3,  0,  0,  3,  4,  6,  0,  2,  0,  0,  6,  0,  2,  3,  5,  6,  0,  0,  0,  0,  0,  0, -1, -1,  9,  1,  9,  0,  0,  0,  5,  6,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  0,  0,  0,  0,  4,  3,  3,  0,  5,  4,  0,  0,  6,  3,  0,  0,  0,  4,  0,  5,  0,  0,  6,  5,  5,  6,  6,  6,  6,  6,  1,  6, -1],
[ 8, 10,  6,  7, 10,  3,  6,  8,  1,  5,  6,  2,  5,  7,  7,  6,  4,  6,  4,  7,  6,  4,  6,  5,  4,  5,  6,  5,  8,  6,  7,  6,  7,  1, -1,  6,  0,  6,  0,  8,  0,  4, -1, -1,  0,  0,  0,  0,  0,  0,  0,  7,  4,  3,  6,  6,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  3,  4,  0,  3,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,  0,  5,  6,  5,  6,  6,  6,  6,  6,  6,  6,  1],
[ 0, -1,  5,  1,  7,  5,  8,  7,  5,  5,  7,  5,  6,  4,  7,  7,  4,  4,  6,  6,  4,  4,  7,  1,  3,  0,  0,  0,  3,  0,  6,  4,  7,  0,  3,  0,  5,  0,  0,  0, -1,  0,  0,  0, -1,  0,  1,  0,  0,  0,  7,  0,  6,  6,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  0,  0,  5,  8,  7,  7,  6,  0,  6,  6,  6,  6,  7, -1],
[10,  7,  7, 10,  0,  3,  7,  5,  4,  4,  4,  8,  5,  7,  7,  5,  4,  5,  7,  4,  4,  7,  5,  7,  6,  4,  4,  4,  5,  5,  6,  6,  5,  7,  0,  5,  0,  5,  0,  8,  0,  0,  4,  0,  0,  6,  0,  0,  0,  0,  0,  0,  0,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,  0,  5,  0,  4,  0,  4,  4,  5,  6,  4,  7,  7,  6,  8,  6,  7,  7, 10],
[-1,  8,  2,  7,  0,  9,  7,  7,  2,  7,  8,  1,  6,  7,  6,  5,  9,  0,  8,  6,  8,  4,  7,  6,  0,  0,  0,  0,  7,  0,  4,  7,  2,  0,  0,  0,  0,  0,  9,  0,  0, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,  0,  3,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  6,  0,  4,  0,  0,  4,  0,  5,  0,  9,  7,  5,  5,  5,  6,  7,  5,  5,  5, -1],
[ 4,  1,  6,  7,  6,  5,  5,  8,  7,  5,  9,  6,  5,  3, 10,  9,  6,  7,  6,  5,  6,  4,  6,  6,  7,  5,  6,  4,  6,  5,  7,  8,  7,  6,  0,  4,  0,  5,  0,  6,  0,  0,  0,  0,  0, -1,  0,  6,  0,  0,  2, 10,  0,  6,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  4,  0,  5,  0,  0,  4,  5,  3,  4,  5, -1,  5,  5,  5,  5,  5,  6,  5,  5,  4, -1],
[ 0,  3, -1,  8,  7,  0,  8,  6,  7,  6,  4,  8,  6,  3,  5,  5,  5,  7,  9,  4,  7,  5,  4,  3,  0,  2,  0,  0,  3,  0,  0,  0,  0,  3,  5,  0,  0,  0,  6,  0,  7,  1, -1,  0,  0,  0, -1,  0,  6,  0,  9,  0,  2,  7,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,  7,  5,  6,  4,  4,  4,  4,  5,  7,  5,  5,  5,  5,  4,  6,  5,  5,  5,  5,  8],
[ 4,  7,  2,  5,  7,  3,  3,  8,  6,  5,  7,  3,  5,  2,  8,  6,  3,  9,  5,  3,  4,  9,  3,  8,  5,  5,  4,  3,  8,  5,  5,  6,  5,  5,  0,  5,  0,  5,  0,  5,  0,  0,  0,  0,  0,  0,  0,  5,  0,  7,  0,  0,  0,  0,  0,  5,  0,  0,  3,  4,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  5,  4,  3,  4,  4,  4,  3,  5,  3,  4,  4,  4,  9,  5,  4,  5,  4,  4,  6, 10],
[-1,  2,  3,  5,  2,  3,  8,  1,  3,  2,  4,  8,  3,  8, 10,  6,  0,  5,  7,  4,  3,  2,  3,  6,  4,  6,  0,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  2,  0,  0, -1,  1,  0,  0,  0, -1,  0,  0,  0,  0,  0,  0,  3,  0,  0,  4,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  9,  7,  3, -1,  4,  7,  4,  4,  4, -1,  4,  5,  5,  4,  5,  4,  4,  4,  5,  4,  4,  6],
[ 1,  2,  7,  0,  0,  6,  7,  4,  8,  9, 10,  5,  7, 10,  6,  4,  0,  4,  4,  0,  5,  5,  3,  6,  3,  4,  0,  5,  6,  0,  4,  6,  4,  9,  0,  8,  0,  4,  9,  0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,  6,  0,  2,  0,  0,  3,  0,  4,  4,  0,  0,  0,  0,  0,  0,  0,  0,  4,  3,  0,  0,  5,  3,  4,  4,  4,  4,  4,  4,  0, -1,  3,  3,  4,  4,  3,  4,  4,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6],
[ 6, 10,  9, -1,  8,  0,  7,  7,  0,  4,  3,  7,  6,  7,  5,  6,  4,  3,  0,  3,  2,  4,  3, 10,  2,  3,  0,  0,  0,  0,  0,  0,  0,  0,  6,  0,  0,  0,  0,  0, 10,  2,  0,  3, -1,  0,  0,  0,  0,  0,  0,  0,  6,  2,  2,  2,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  0,  0,  4,  3,  4,  3,  3,  3,  3,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  8],
[ 9,  6,  2,  6,  5,  2,  9,  2,  2,  3,  6,  2,  3,  5,  7,  3,  6,  4,  4,  2,  5,  5,  3,  3,  4,  2,  0,  0,  3,  0,  3,  3,  4,  4,  4,  3,  0,  0,  0,  0,  4,  4,  0,  0,  0, -1,  0,  0,  0,  0,  5,  9,  0,  2,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1],
[-1,  6, -1,  1,  4,  8,  5, 10,  1, 10,  3,  3,  3,  4,  0,  5,  0,  0,  0,  4,  2,  2,  2,  2,  0,  3,  0,  0,  3,  0,  0,  0,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  5,  4,  8,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1],
[ 1, 10, -1,  7,  0,  7,  8,  9,  7,  6,  2,  4,  3,  3,  0,  0,  2,  2,  3,  3,  6,  4,  3,  2,  2,  5,  2,  4,  0,  0,  3,  2,  3,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1],
[ 7,  0,  0, 10,  2,  1,  1,  5,  0,  5,  9,  4,  2,  4,  0,  8,  0,  4,  3,  2,  0,  1,  0,  2,  0, 10,  0,  7,  0,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1],
[ 8,  6,  7,  0,  3,  0, 10,  9,  2,  3,  3,  3,  2,  0,  0,  4,  0,  5,  0,  0,  1,  1,  0,  3,  0, 10,  1,  2,  1,  0,  2,  0,  1, 10,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1],
[ 1,  1,  5,  6,  3,  4,  4,  7,  6,  3,  9,  3,  0,  4,  8,  1,  0,  0,  8,  0,  9,  3,  4,  8,  9,  8,  4, 10, 10,  4,  0,  0,  0,  0,  3,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6],
[ 2, 10,  5, 10,  4,  2,  2,  0,  5,  0, 10,  3,  1,  1,  4,  6, 10,  8,  4,  0,  9,  0,  0,  6,  1,  5, 10,  2,  6,  0,  3,  4,  0,  9,  1,  1,  0,  0,  0,  0,  8,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  7],
[ 0,  5,  0,  7,  5, -1,  9,  2,  1,  6,  6,  2,  9,  2,  5,  0,  0,  1,  2, -1,  3,  8,  8, -1, 10,  3,  9, -1,  6,  7,  5,  8, -1,  0,  4,  6,  4,  8, -1,  9,  9,  9,  0,  7,  7,  3,  5,  6,  8,  8,  0,  0, -1, -1,  8,  9, -1,  8,  9,  9,  0,  8,  2,  8,  0,  6,  7,  7,  9,  3, 10,  1, -1,  1,  9,  4,  8,  7,  0,  7,  3,  9,  7, -1,  6,  6, -1,  7,  3,  5,  0,  9,  6,  4, 10,  0,  8,  8,  2,  9,  7],
[ 9,  1,  1,  8,  5, -1,  7,  7,  6,  6,  4,  5,  6,  2,  7,  0,  5,  5,  8,  7,  0,  0,  7,  3,  0, 10,  7,  9,  8, 10,  8,  1,  3,  4, 10,  4,  3,  1,  3,  2, -1,  9, -1, -1,  5,  4,  1,  8,  7,  1,  1,  2,  1,  7,  4,  9,  2,  8,  9,  9,  8,  4,  4,  5,  4,  7,  5,  4,  1,  5,  5,  5,  3,  5, -1,  4,  8,  7,  4,  9,  7,  1,  6,  5,  8,  8,  6,  6,  7,  9,  6,  9,  7, 10, 10,  2, -1,  7,  7, -1,  0],
]

for k, i in enumerate(lookup):
    lookup[k] = [([x/11]*3 if x >= 0 else [-x,0,0]) for x in i]

plt.show(plt.imshow(lookup, interpolation="none", origin="lower"))

"""
hog.cpp

#include <stdio.h>
#include <iostream>
#include <fstream>
#include <algorithm>
#include <cstring>
#include <string>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <queue>

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef pair<pair<int, int>, int> iii;
typedef vector<ii> vii;
typedef set<int> si;
typedef map<string, int> msi;

#define I18F 1000000000000000000 // 10^18
#define INF 2000000000 // 2 billion
#define MEMSET_INF 127 // about 2B
#define MEMSET_HALF_INF 63 // about 1B

int GOAL_SCORE = 100;
bool debug = false;

int true_player = 0;

double Q[101][101][12];

int _S1 = 101;
int _S2 = 101;
int _A = 12;

ii s, s_p;
int a;
double epsilon = 1;
double alpha = 0.03;
double discount = 0.95;

int initialiseQTable(){
  for(int i = 0; i < _S1; ++i){
    for(int j = 0; j < _S2; ++j){
      for(int k = 0; k < _A; ++k){
        Q[i][j][k] = double(rand()) / double(RAND_MAX);
      }
    }
  }
}

double random_1(){ return (double(rand()) / double (RAND_MAX)); }

// act
int rl(int player_score, int opponent_score){
  s = make_pair(player_score, opponent_score);
  int best = 0;
  double best_val = Q[player_score][opponent_score][0];
  for(int i = 1; i < 12; ++i){
    if(Q[player_score][opponent_score][i] > best_val){
      best_val = Q[player_score][opponent_score][i];
      best = i;
    }
  }

  a = (random_1() < epsilon) ? rand() % 12 : best;
  epsilon -= 0.000000003;
  epsilon = max(epsilon, 0.005);
  return a - 1;
}

int s_max(int a, int b){
  int best = 0;
  double best_val = Q[a][b][0];
  for(int i = 1; i < 12; ++i){
    if(Q[a][b][i] > best_val){
      best_val = Q[a][b][i];
      best = i;
    }
  }
  return best - 1;
}

double s_p_max(){
  int best = 0;
  double best_val = Q[s_p.first][s_p.second][0];
  for(int i = 1; i < 12; ++i){
    if(Q[s_p.first][s_p.second][i] > best_val){
      best_val = Q[s_p.first][s_p.second][i];
      best = i;
    }
  }
  return best_val;
}

// learn 
int learn(int player_score, int opponent_score){
  double reward = 0;
  // profile 1
  //reward = (double) (player_score - opponent_score)/10;
  // profile 2
  //reward = (player_score > opponent_score)? 10 : -10;
  if(player_score >= GOAL_SCORE) reward = 500;
  if(opponent_score >= GOAL_SCORE) reward = -500;
  //printf("%d %d %d\n", player_score, opponent_score, reward);

  if(debug) printf("learning s: %d %d s': %d %d a: %d reward : %lf\n", s.first, s.second, s_p.first, s_p.second, a, reward);
  Q[s.first][s.second][a] += alpha * (reward + discount * s_p_max() - Q[s.first][s.second][a]);
}


int n_dice(int n){
  return (rand() % n) + 1;
}

int six_sided(){
  return n_dice(6);
}

int four_sided(){
  return n_dice(4);
}

int rerolled(int (&dice)()){
  int roll = dice();
  if(roll % 2 == 0) return roll;
  return dice();
}

int rerolled_4(){
  return rerolled(four_sided);
}

int rerolled_6(){
  return rerolled(six_sided);
}

int roll_dice(int num_rolls, int (&dice)() = six_sided){
  int pig_out = 0;
  int outcome = 0;
  for(int i = 0; i < num_rolls; ++i){
    int roll = dice();
    if(debug) printf(" %d ", roll);
    if(roll == 1) pig_out++;
    outcome += roll;
  }
  if(pig_out) return pig_out;
  return outcome;
}

int free_bacon(int opponent_score){
  return 1 + max(opponent_score/10, opponent_score%10);
}

bool is_prime(int x){
  if(x == 2) return true;
  if(x == 1 || x%2 == 0) return false;
  for(int i = 3; i < ceil(sqrt(x))+1; i+=2){
    if(x % i == 0) return false;
  }
  return true;
}

int next_prime(int x){
  if(x == 2) return 3;
  for(int i = x+2; i < 100; i+=2){
    if(is_prime(i)) return i;
  }
}

int next_primes[100];

int generate_primes(){
  next_primes[0] = 0;
  for(int i = 1; i < 100; ++i) next_primes[i] = (is_prime(i))?next_prime(i):i;
}

int take_turn(int num_rolls, int opponent_score, int (&dice)() = six_sided){
  int result;
  if(num_rolls == 0){
    result = free_bacon(opponent_score);
  }else{
    result = roll_dice(num_rolls, dice);
  }
  if(debug) printf("rolled %d ", result);
  
  result = next_primes[result];
  result = min(25 - num_rolls, result);
  return result;
}

int other(int player){ return 1 - player; }

ii play(int (&strategy0)(int, int), int (&strategy1)(int, int), int score0=0, int score1=0, int goal = GOAL_SCORE){
  int player = 0;
  bool dice_swapped = false; 

  while(score0 < goal && score1 < goal){
    int player_score = (player == 0) ? score0 : score1;
    int opponent_score = (player == 0) ? score1 : score0;

    int strategy = (player == 0) ? strategy0(player_score, opponent_score) : strategy1(player_score, opponent_score);

    int gain = 0;
    bool hog_wild = ((score0 + score1) % 7 == 0);
    
    if(debug) printf("player%d rolled %d dice ", player, strategy);
    if(strategy == -1){
      dice_swapped = !dice_swapped;
      gain = 1;
    }else{
      if(hog_wild){
        if(dice_swapped){
          gain = take_turn(strategy, opponent_score, rerolled_4);
        }else{
          gain = take_turn(strategy, opponent_score, rerolled_6);
        }
      }else{
        if(dice_swapped){
          gain = take_turn(strategy, opponent_score, four_sided);
        }else{
          gain = take_turn(strategy, opponent_score, six_sided);
        }
      }
    }
    
    if(debug) printf("and gained %d.\n", gain);

    if(player == 0) score0 += gain;
    if(player == 1) score1 += gain;
    
    if(max(score0,score1) == 2*min(score0,score1)){
      int store = score0;
      score0 = score1;
      score1 = store;
    }

    player = other(player);
    if(player == true_player || score0 >= GOAL_SCORE || score1 >= GOAL_SCORE){
      int true_score = (true_player == 0) ? score0 : score1;
      int other_score = score0 + score1 - true_score;
      true_score = min(100, true_score);
      other_score = min(100, other_score);
      s_p = make_pair(true_score, other_score);
      learn(true_score, other_score);
      s = s_p;
    }
    if(debug) printf("%d %d\n", score0, score1);
  }
  return make_pair(score0, score1);
}

int always_roll_random(int player_score, int opponent_score){
  int roll = rand() % 12 -1;
  return roll;
}

int always_roll_4(int player_score, int opponent_score){
  return 4;
}

int winner(int (&strategy0)(int, int), int (&strategy1)(int, int)){
  ii result = play(strategy0,strategy1);
  if(result.first > result.second) return 0;
  return 1;
}

float average_win_rate(int(&strategy0)(int,int), int(&strategy1)(int,int), int runs){
  int wins = 0;
  true_player = 0;
  for(int i = 0; i < runs/2; ++i) wins += 1 - winner(strategy0, strategy1);
  true_player = 1;
  for(int i = 0; i < runs/2; ++i) wins += winner(strategy1, strategy0);
  return float(wins)/float(runs);
}

int prime_bacon(int opponent_score){
  int result = free_bacon(opponent_score);
  if(is_prime(result)) result = next_prime(result);
  return result;
}

int swap_and_5(int player_score, int opponent_score){
  if(player_score == 0 || opponent_score == 0) return -1;
  int gain = prime_bacon(opponent_score);
  if((gain + player_score)*2 == opponent_score || gain >= 6) return 0;
  return 5;
}

int just_swap(int player_score, int opponent_score){
  int gain = prime_bacon(opponent_score);
  if((gain + player_score)*2 == opponent_score || gain >= 8) return 0;
  return 4;
}

int epochs = 1000000;

int rl_no_effect(int player_score, int opponent_score){
  return s_max(player_score, opponent_score);
}

void cpp_save_memory(){
  FILE * file;
  file = fopen("memory.in", "w");
  for(int i = 0; i < 101; ++i){
    for(int j = 0; j < 101; ++j){
      fprintf(file, "%2d ", s_max(i,j));
    }
    fprintf(file, "\n");
  }
  fclose(file);
}

void save_memory(){
  FILE * file;
  file = fopen("memory_hog_read.txt", "w");
  fprintf(file, "[");
  for(int i = 0; i < 101; ++i){
    fprintf(file,"[");
    for(int j = 0; j < 101; ++j){
      fprintf(file, "%2d", s_max(i,j));
      if(j != 100){
        fprintf(file, ", ");
      }else{
        fprintf(file, "],");
      }
    }
    fprintf(file, "\n");
  }
  fprintf(file, "]");
  fclose(file);
}

int strategy[101][101];

void read_memory(){
  FILE * file;
  file = fopen("memory.in", "r");
  for(int i = 0; i < _S1; ++i){
    for(int j = 0; j < _S2; ++j){
      fscanf(file, "%d", &strategy[i][j]);
      if(i%5 == 0 && j % 5 == 0) printf("%2d ", strategy[i][j]);
    }
    if(i % 5 == 0) printf("\n");
  }
  fclose(file);
}

void train_initial(){
  initialiseQTable();
  for(int i = 0; i < epochs; ++i){
    float winrates[4];
    winrates[0] = average_win_rate(rl, always_roll_4,25000);
    winrates[1] = average_win_rate(rl, always_roll_random,25000);
    winrates[2] = average_win_rate(rl, rl_no_effect,25000);
    winrates[3] = average_win_rate(rl, swap_and_5,25000);
    printf("epoch: %4d type: 4    epsilon: %lf winrate: %f\n", i + 1, epsilon, winrates[0]);
    printf("epoch: %4d type: rand epsilon: %lf winrate: %f\n", i + 1, epsilon, winrates[1]);
    printf("epoch: %4d type: rl   epsilon: %lf winrate: %f\n", i + 1, epsilon, winrates[2]);
    printf("epoch: %4d type: s&5  epsilon: %lf winrate: %f\n", i + 1, epsilon, winrates[3]);
    
    if(i % 100 == 0){
      for(int i = 0; i <= 20; ++i){
        for(int j = 0; j <= 20; ++j) printf("%2d ", s_max(i*5,j*5));
        printf("\n");
      }
      save_memory();
      cpp_save_memory();
    }
    if(winrates[0] > 0.67f){
      save_memory();
      cpp_save_memory();
      return;
    }
  }
}

int final_strategy(int player_score, int opponent_score){
  return strategy[player_score][opponent_score];
}

void train_strategy(){
  initialiseQTable();
  for(int i = 0; i < epochs; ++i){
    float winrates[4];
    winrates[0] = average_win_rate(rl, always_roll_4, 100000);
    winrates[1] = average_win_rate(rl, swap_and_5, 100000);
    winrates[2] = average_win_rate(rl, final_strategy, 100000);
    printf("epoch: %4d type: final epsilon: %lf winrate: %f\n", i + 1, epsilon, winrates[2]);
    if(i % 100 == 0){
      for(int i = 0; i < 20; ++i){
        for(int j = 0; j < 20; ++j) printf("%2d ", s_max(i*5,j*5));
        printf("\n");
      }
      save_memory();
      cpp_save_memory();
    }
    if(winrates[2] > 0.53f){
      printf("Found beating solution\n");
      save_memory();
      cpp_save_memory();
      read_memory();
      initialiseQTable();
    }
  }
}

void test_strategy(){
    printf("type: 4    winrate: %f\n", average_win_rate(final_strategy, always_roll_4, 300000));
    printf("type: rand winrate: %f\n", average_win_rate(final_strategy, always_roll_random, 300000));
    printf("type: s&5  winrate: %f\n", average_win_rate(final_strategy, swap_and_5, 300000));
    printf("type: s    winrate: %f\n", average_win_rate(final_strategy, just_swap, 300000));
}

int main(){
  srand(time(NULL));
  generate_primes();
  train_initial();
  printf("Finished initial training.\n");
  read_memory();
  train_strategy();
  return 0;
}

"""
